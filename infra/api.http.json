{
	"info": {
		"_postman_id": "537baa22-afc3-4f65-b231-50572dcd53eb",
		"name": "HOOPOE",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "22927035",
		"_collection_link": "https://dewoloper.postman.co/workspace/dewo~9f34982c-dde5-4f77-9d5d-46872ed07d4a/collection/22927035-537baa22-afc3-4f65-b231-50572dcd53eb?action=share&source=collection_link&creator=22927035"
	},
	"item": [
		{
			"name": "Events",
			"item": [
				{
					"name": "Hoop",
					"item": [
						{
							"name": "Add Hoop",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJfaWQiOjYsInVzZXJfcm9sZSI6IlVzZXIiLCJ0b2tlbl90aW1lIjoxNzE3NTY5ODU3MDM5OTkwNjE4LCJpc19yZWZyZXNoIjpmYWxzZSwiZXhwIjoxODE3NDQ4MjU3LCJpYXQiOjE3MTc1Njk4NTd9.jyzdJD9jLUIrHgRXhoX3_FL_SwhFU9Q_hqh1fhm7EOWk6URwGewBhRRWn0WzQ-EENNc5vTO9DUheQO2JuLTswQ",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "cover",
											"type": "file",
											"src": "/Users/wildonion/Desktop/DALLÂ·E 2024-08-20 13.18.23 - A conceptual book cover design featuring a man without a suit walking in the middle. The ground beneath him subtly incorporates a heart with a brain e.webp"
										},
										{
											"key": "etype",
											"value": "chatroom",
											"type": "text"
										},
										{
											"key": "manager",
											"value": "1",
											"type": "text"
										},
										{
											"key": "entrance_fee",
											"value": "20",
											"type": "text"
										},
										{
											"key": "title",
											"value": "first event ",
											"type": "text"
										},
										{
											"key": "description",
											"value": "let's gather together",
											"type": "text"
										},
										{
											"key": "started_at",
											"value": "1724869829",
											"type": "text"
										},
										{
											"key": "duration",
											"value": "160",
											"type": "text"
										},
										{
											"key": "capacity",
											"value": "200",
											"type": "text"
										},
										{
											"key": "participants",
											"value": "[2, 4, 6]",
											"type": "text"
										},
										{
											"key": "invitations",
											"value": "[{\"entrance_fee\": 10, \"friend_id\": 8}]",
											"type": "text"
										},
										{
											"key": "end_at",
											"value": "1724869980",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{hoop-v1}}",
									"host": [
										"{{hoop-v1}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Notif",
					"item": [
						{
							"name": "Publish To RMQ",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "token_time",
										"value": "124kUmD39YUwJRKxaQqTkhhPRLLaieQJWkV2VpXLgRNFuXheXocqxVVT8M6Zxcce5ZKEArkkE"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"producer_info\": {\n        \"Rmq\":{\n            \"local_spawn\": true, // spawn the task into the actor thread itself\n            \"notif_data\": { \n                \"receiver_info\": \"1\",\n                \"id\": \"unqie-id0\",\n                \"action_data\": {\n                    \"pid\": 200.4\n                }, \n                \"actioner_info\": \"2\", \n                \"action_type\": \"ProductPurchased\", \n                \"fired_at\": 1714316645, \n                \"is_seen\": false\n            }, \n            \"exchange_name\": \"SavageEx\",\n            \"exchange_type\": \"fanout\", // amq.topic for pubsub\n            \"routing_key\": \"\", // routing pattern or key - will be ignored if type is fanout\n            \"encryptionConfig\": { // this can be null\n                \"secret\": \"wildonion@1234\",\n                \"passphrase\": \"wildonion@12345\"\n            }\n        },\n        \"Kafka\": null,\n        \"Redis\": null\n    },\n    \"consumer_info\": null\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{events-v1}}/notif/",
									"host": [
										"{{events-v1}}"
									],
									"path": [
										"notif",
										""
									]
								},
								"description": "if you want to produce notif into the RMQ channel put `consumer_info: null` and fill the `producer_info`, to consume notifs just put `producer_info: null` and fill the `consumer_info`"
							},
							"response": []
						},
						{
							"name": "Publish To Kafka",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "token_time",
										"value": "124kUmD39YUwJRKxaQqTkhhPRLLaieQJWkV2VpXLgRNFuXheXocqxVVT8M6Zxcce5ZKEArkkE"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"producer_info\": {\n        \"Kafka\":{\n            \"local_spawn\": true, // spawn the task into the actor thread itself\n            \"notif_data\": { \n                \"receiver_info\": \"1\",\n                \"id\": \"unqie-id0\",\n                \"action_data\": {\n                    \"pid\": 200.4\n                }, \n                \"actioner_info\": \"2\", \n                \"action_type\": \"ProductPurchased\", \n                \"fired_at\": 1714316645, \n                \"is_seen\": false\n            }, \n            \"brokers\": \"localhost:9092\", // localhost:29092,localhost:39092,localhost:49092\n            \"headers\": [{\n                \"key\": \"wildonionKey\", \n                \"val\": \"wildonionValue\"\n            }],\n            \"partitions\": 4,\n            \"topic\": \"SavageTopic\",\n            \"encryptionConfig\": { // this can be null\n                \"secret\": \"wildonion@1234\",\n                \"passphrase\": \"wildonion@12345\"\n            }\n        },\n        \"Rmq\": null,\n        \"Redis\": null\n    },\n    \"consumer_info\": null\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{events-v1}}/notif/",
									"host": [
										"{{events-v1}}"
									],
									"path": [
										"notif",
										""
									]
								},
								"description": "if you want to produce notif into the RMQ channel put `consumer_info: null` and fill the `producer_info`, to consume notifs just put `producer_info: null` and fill the `consumer_info`"
							},
							"response": []
						},
						{
							"name": "Publish To Redis",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "token_time",
										"value": "124kUmD39YUwJRKxaQqTkhhPRLLaieQJWkV2VpXLgRNFuXheXocqxVVT8M6Zxcce5ZKEArkkE"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"producer_info\": {\n        \"Redis\":{\n            \"local_spawn\": true, // spawn the task into the actor thread itself\n            \"notif_data\": { \n                \"receiver_info\": \"1\",\n                \"id\": \"unqie-id0\",\n                \"action_data\": {\n                    \"pid\": 200.4\n                }, \n                \"actioner_info\": \"2\", \n                \"action_type\": \"ProductPurchased\", \n                \"fired_at\": 1714316645, \n                \"is_seen\": false\n            }, \n            \"channel\": \"savege channel\",\n            \"encryptionConfig\": { // this can be null\n                \"secret\": \"wildonion@1234\",\n                \"passphrase\": \"wildonion@12345\"\n            }\n        },\n        \"Rmq\": null,\n        \"Kafka\": null\n    },\n    \"consumer_info\": null\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{events-v1}}/notif/",
									"host": [
										"{{events-v1}}"
									],
									"path": [
										"notif",
										""
									]
								},
								"description": "if you want to produce notif into the RMQ channel put `consumer_info: null` and fill the `producer_info`, to consume notifs just put `producer_info: null` and fill the `consumer_info`"
							},
							"response": []
						},
						{
							"name": "Start RMQ Consumer | Run Me First!",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "token_time",
										"value": "124kUmD39YUwJRKxaQqTkhhPRLLaieQJWkV2VpXLgRNFuXheXocqxVVT8M6Zxcce5ZKEArkkE"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"producer_info\": null,\n    \"consumer_info\": {\n        \"Rmq\": {\n            \"queue\": \"TestOnion\",\n            \"exchange_name\": \"SavageEx\",\n            \"routing_key\": \"\",\n            \"tag\": \"cons_tag0\",\n            \"redis_cache_exp\": 300, // this can be 0 to not to store data on redis\n            \"local_spawn\": true, // spawn the task into the actor thread itself\n            \"store_in_db\": true,\n            \"decryptionConfig\": { // this can be null\n                \"secret\": \"wildonion@1234\",\n                \"passphrase\": \"wildonion@12345\"\n            }\n        },\n        \"Kafka\": null,\n        \"Redis\": null\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{events-v1}}/notif/",
									"host": [
										"{{events-v1}}"
									],
									"path": [
										"notif",
										""
									]
								},
								"description": "if you want to produce notif into the RMQ channel put `consumer_info: null` and fill the `producer_info`, to consume notifs just put `producer_info: null` and fill the `consumer_info`"
							},
							"response": []
						},
						{
							"name": "Start Redis Consumer | Run Me First!",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "token_time",
										"value": "124kUmD39YUwJRKxaQqTkhhPRLLaieQJWkV2VpXLgRNFuXheXocqxVVT8M6Zxcce5ZKEArkkE"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"producer_info\": null,\n    \"consumer_info\": {\n        \"Redis\": {\n            \"channel\": \"savege channel\",\n            \"redis_cache_exp\": 300, // this can be 0 to not to store data on redis\n            \"decryptionConfig\": { // this can be null\n                \"secret\": \"wildonion@1234\",\n                \"passphrase\": \"wildonion@12345\"\n            }\n        },\n        \"Rmq\": null,\n        \"Kafka\": null\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{events-v1}}/notif/",
									"host": [
										"{{events-v1}}"
									],
									"path": [
										"notif",
										""
									]
								},
								"description": "if you want to produce notif into the RMQ channel put `consumer_info: null` and fill the `producer_info`, to consume notifs just put `producer_info: null` and fill the `consumer_info`"
							},
							"response": []
						},
						{
							"name": "Start Kafka Consumer | Run Me First!",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "token_time",
										"value": "124kUmD39YUwJRKxaQqTkhhPRLLaieQJWkV2VpXLgRNFuXheXocqxVVT8M6Zxcce5ZKEArkkE"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"producer_info\": null,\n    \"consumer_info\": {\n        \"Kafka\": {\n            \"brokers\": \"localhost:9092\", // localhost:29092,localhost:39092,localhost:49092\n            \"topics\": [\"SavageTopic\"],\n            \"consumerGroupId\": \"cid\", // this can be UUID\n            \"redis_cache_exp\": 300, // this can be 0 to not to store data on redis\n            \"decryptionConfig\": { // this can be null\n                \"secret\": \"wildonion@1234\",\n                \"passphrase\": \"wildonion@12345\"\n            }\n        },\n        \"Rmq\": null,\n        \"Redis\": null\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{events-v1}}/notif/",
									"host": [
										"{{events-v1}}"
									],
									"path": [
										"notif",
										""
									]
								},
								"description": "if you want to produce notif into the RMQ channel put `consumer_info: null` and fill the `producer_info`, to consume notifs just put `producer_info: null` and fill the `consumer_info`"
							},
							"response": []
						},
						{
							"name": "Get Owner Notifs",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"producer_info\": {\n        \"info\":{\n            \"local_spawn\": true,\n            \"notif_data\": { \n                \"receiver_info\": { \"id\": 1 },\n                \"id\": \"unqie-id\",\n                \"action_data\": {\n                    \"pid\": 200\n                }, \n                \"actioner_info\": { \"id\": 2 }, \n                \"action_type\": \"ProductPurchased\", \n                \"fired_at\": 1714316645, \n                \"is_seen\": false\n            }, \n            \"exchange_name\": \"wildonionExchange\",\n            \"exchange_type\": \"fanout\", // amq.topic for pubsub\n            \"routing_key\": \"\" // routing pattern or key - will be ignored if type is fanout\n        }\n    },\n    // \"producer_info\": null,\n    // \"consumer_info\": null\n    \"consumer_info\": {\n        \"info\": {\n            \"queue\": \"RustReporterQ\",\n            \"exchange_name\": \"wildonionExchange\",\n            \"routing_key\": \"\",\n            \"tag\": \"cons_tag0\",\n            \"redis_cache_exp\": 300,\n            \"local_spawn\": true\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{events-v1}}/notif/?owner=1&page_size=10&from=0&to=20",
									"host": [
										"{{events-v1}}"
									],
									"path": [
										"notif",
										""
									],
									"query": [
										{
											"key": "owner",
											"value": "1"
										},
										{
											"key": "page_size",
											"value": "10"
										},
										{
											"key": "from",
											"value": "0"
										},
										{
											"key": "to",
											"value": "20"
										}
									]
								},
								"description": "if you want to produce notif into the RMQ channel put `consumer_info: null` and fill the `producer_info`, to consume notifs just put `producer_info: null` and fill the `consumer_info`"
							},
							"response": []
						},
						{
							"name": "Get All Notifs",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"producer_info\": {\n        \"info\":{\n            \"local_spawn\": true,\n            \"notif_data\": { \n                \"receiver_info\": { \"id\": 1 },\n                \"id\": \"unqie-id\",\n                \"action_data\": {\n                    \"pid\": 200\n                }, \n                \"actioner_info\": { \"id\": 2 }, \n                \"action_type\": \"ProductPurchased\", \n                \"fired_at\": 1714316645, \n                \"is_seen\": false\n            }, \n            \"exchange_name\": \"wildonionExchange\",\n            \"exchange_type\": \"fanout\", // amq.topic for pubsub\n            \"routing_key\": \"\" // routing pattern or key - will be ignored if type is fanout\n        }\n    },\n    // \"producer_info\": null,\n    // \"consumer_info\": null\n    \"consumer_info\": {\n        \"info\": {\n            \"queue\": \"RustReporterQ\",\n            \"exchange_name\": \"wildonionExchange\",\n            \"routing_key\": \"\",\n            \"tag\": \"cons_tag0\",\n            \"redis_cache_exp\": 300,\n            \"local_spawn\": true\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{events-v1}}/notif/?from=0&to=20&page_size=20",
									"host": [
										"{{events-v1}}"
									],
									"path": [
										"notif",
										""
									],
									"query": [
										{
											"key": "from",
											"value": "0"
										},
										{
											"key": "to",
											"value": "20"
										},
										{
											"key": "page_size",
											"value": "20"
										}
									]
								},
								"description": "if you want to produce notif into the RMQ channel put `consumer_info: null` and fill the `producer_info`, to consume notifs just put `producer_info: null` and fill the `consumer_info`"
							},
							"response": []
						},
						{
							"name": "Get Notif By Id",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"producer_info\": {\n        \"info\":{\n            \"local_spawn\": true,\n            \"notif_data\": { \n                \"receiver_info\": { \"id\": 1 },\n                \"id\": \"unqie-id\",\n                \"action_data\": {\n                    \"pid\": 200\n                }, \n                \"actioner_info\": { \"id\": 2 }, \n                \"action_type\": \"ProductPurchased\", \n                \"fired_at\": 1714316645, \n                \"is_seen\": false\n            }, \n            \"exchange_name\": \"wildonionExchange\",\n            \"exchange_type\": \"fanout\", // amq.topic for pubsub\n            \"routing_key\": \"\" // routing pattern or key - will be ignored if type is fanout\n        }\n    },\n    // \"producer_info\": null,\n    // \"consumer_info\": null\n    \"consumer_info\": {\n        \"info\": {\n            \"queue\": \"RustReporterQ\",\n            \"exchange_name\": \"wildonionExchange\",\n            \"routing_key\": \"\",\n            \"tag\": \"cons_tag0\",\n            \"redis_cache_exp\": 300,\n            \"local_spawn\": true\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{events-v1}}/notif/?id=3",
									"host": [
										"{{events-v1}}"
									],
									"path": [
										"notif",
										""
									],
									"query": [
										{
											"key": "id",
											"value": "3"
										}
									]
								},
								"description": "if you want to produce notif into the RMQ channel put `consumer_info: null` and fill the `producer_info`, to consume notifs just put `producer_info: null` and fill the `consumer_info`"
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Health",
			"item": [
				{
					"name": "Mint Demo",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"is_minted\": false,\n    \"buyer_id\": 1,\n    \"meta\": null\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{health-v1}}/atomic-mint/?pid=1",
							"host": [
								"{{health-v1}}"
							],
							"path": [
								"atomic-mint",
								""
							],
							"query": [
								{
									"key": "pid",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload File (AES256)",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "pic",
									"type": "file",
									"src": "/Users/wildonion/Desktop/onion.jpeg"
								},
								{
									"key": "secret_key",
									"value": "124",
									"type": "text"
								},
								{
									"key": "passphrase",
									"value": "124",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{health-v1}}/upload",
							"host": [
								"{{health-v1}}"
							],
							"path": [
								"upload"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"pid\": 1,\n    \"is_minted\": false,\n    \"buyer_id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{health-v1}}/check",
							"host": [
								"{{health-v1}}"
							],
							"path": [
								"check"
							]
						}
					},
					"response": []
				},
				{
					"name": "Home",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{health-v1}}/home",
							"host": [
								"{{health-v1}}"
							],
							"path": [
								"home"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Auth",
			"item": [
				{
					"name": "Generate Access Token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "secret",
								"value": "{{secret_key}}"
							}
						],
						"url": {
							"raw": "{{auth-v1}}/generate-access-token/?exp=4000&scope=write",
							"host": [
								"{{auth-v1}}"
							],
							"path": [
								"generate-access-token",
								""
							],
							"query": [
								{
									"key": "exp",
									"value": "4000"
								},
								{
									"key": "scope",
									"value": "write"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "events-v1",
			"value": "http://localhost:2344/v1/events",
			"type": "string"
		},
		{
			"key": "auth-v1",
			"value": "http://localhost:2344/v1/auth",
			"type": "string"
		},
		{
			"key": "hoop-v1",
			"value": "http://localhost:2344/v1/hoop",
			"type": "string"
		},
		{
			"key": "health-v1",
			"value": "http://localhost:2344/v1/health",
			"type": "string"
		},
		{
			"key": "secret_key",
			"value": "insecure-krm2s^^bo1n*-nvy",
			"type": "string"
		}
	]
}