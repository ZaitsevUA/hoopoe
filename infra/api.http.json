{
	"info": {
		"_postman_id": "537baa22-afc3-4f65-b231-50572dcd53eb",
		"name": "hoopoe",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "22927035",
		"_collection_link": "https://dewoloper.postman.co/workspace/dewo~9f34982c-dde5-4f77-9d5d-46872ed07d4a/collection/22927035-537baa22-afc3-4f65-b231-50572dcd53eb?action=share&source=collection_link&creator=22927035"
	},
	"item": [
		{
			"name": "Events",
			"item": [
				{
					"name": "Hoop",
					"item": []
				},
				{
					"name": "Notif",
					"item": [
						{
							"name": "Register Notif",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "124kUmD39YUwJRKxaQqTkNzcoVW4P1ZqZ3ahiJWVQqs89bope7GtqU881rWpMyVXskyn2PWsp"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"producer_info\": {\n        \"info\":{\n            \"local_spawn\": true,\n            \"notif_data\": { \n                \"receiver_info\": \"1\",\n                \"id\": \"unqie-id0\",\n                \"action_data\": {\n                    \"pid\": 200.4\n                }, \n                \"actioner_info\": \"2\", \n                \"action_type\": \"ProductPurchased\", \n                \"fired_at\": 1714316645, \n                \"is_seen\": false\n            }, \n            \"exchange_name\": \"SavageEx\",\n            \"exchange_type\": \"fanout\", // amq.topic for pubsub\n            \"routing_key\": \"\" // routing pattern or key - will be ignored if type is fanout\n        }\n    },\n    // \"producer_info\": null,\n    \"consumer_info\": null\n    // \"consumer_info\": {\n    //     \"info\": {\n    //         \"queue\": \"TestOnion\",\n    //         \"exchange_name\": \"SavageEx\",\n    //         \"routing_key\": \"\",\n    //         \"tag\": \"cons_tag0\",\n    //         \"redis_cache_exp\": 300,\n    //         \"local_spawn\": true,\n    //         \"cache_on_redis\": true,\n    //         \"store_in_db\": true\n    //     }\n    // }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{events-v1}}/notif/",
									"host": [
										"{{events-v1}}"
									],
									"path": [
										"notif",
										""
									]
								},
								"description": "if you want to produce notif into the RMQ channel put `consumer_info: null` and fill the `producer_info`, to consume notifs just put `producer_info: null` and fill the `consumer_info`"
							},
							"response": []
						},
						{
							"name": "Get Owner Notifs",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"producer_info\": {\n        \"info\":{\n            \"local_spawn\": true,\n            \"notif_data\": { \n                \"receiver_info\": { \"id\": 1 },\n                \"id\": \"unqie-id\",\n                \"action_data\": {\n                    \"pid\": 200\n                }, \n                \"actioner_info\": { \"id\": 2 }, \n                \"action_type\": \"ProductPurchased\", \n                \"fired_at\": 1714316645, \n                \"is_seen\": false\n            }, \n            \"exchange_name\": \"wildonionExchange\",\n            \"exchange_type\": \"fanout\", // amq.topic for pubsub\n            \"routing_key\": \"\" // routing pattern or key - will be ignored if type is fanout\n        }\n    },\n    // \"producer_info\": null,\n    // \"consumer_info\": null\n    \"consumer_info\": {\n        \"info\": {\n            \"queue\": \"RustReporterQ\",\n            \"exchange_name\": \"wildonionExchange\",\n            \"routing_key\": \"\",\n            \"tag\": \"cons_tag0\",\n            \"redis_cache_exp\": 300,\n            \"local_spawn\": true\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{events-v1}}/notif/?owner=1&page_size=10&from=0&to=20",
									"host": [
										"{{events-v1}}"
									],
									"path": [
										"notif",
										""
									],
									"query": [
										{
											"key": "owner",
											"value": "1"
										},
										{
											"key": "page_size",
											"value": "10"
										},
										{
											"key": "from",
											"value": "0"
										},
										{
											"key": "to",
											"value": "20"
										}
									]
								},
								"description": "if you want to produce notif into the RMQ channel put `consumer_info: null` and fill the `producer_info`, to consume notifs just put `producer_info: null` and fill the `consumer_info`"
							},
							"response": []
						},
						{
							"name": "Get All Notifs",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"producer_info\": {\n        \"info\":{\n            \"local_spawn\": true,\n            \"notif_data\": { \n                \"receiver_info\": { \"id\": 1 },\n                \"id\": \"unqie-id\",\n                \"action_data\": {\n                    \"pid\": 200\n                }, \n                \"actioner_info\": { \"id\": 2 }, \n                \"action_type\": \"ProductPurchased\", \n                \"fired_at\": 1714316645, \n                \"is_seen\": false\n            }, \n            \"exchange_name\": \"wildonionExchange\",\n            \"exchange_type\": \"fanout\", // amq.topic for pubsub\n            \"routing_key\": \"\" // routing pattern or key - will be ignored if type is fanout\n        }\n    },\n    // \"producer_info\": null,\n    // \"consumer_info\": null\n    \"consumer_info\": {\n        \"info\": {\n            \"queue\": \"RustReporterQ\",\n            \"exchange_name\": \"wildonionExchange\",\n            \"routing_key\": \"\",\n            \"tag\": \"cons_tag0\",\n            \"redis_cache_exp\": 300,\n            \"local_spawn\": true\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{events-v1}}/notif/?from=0&to=20&page_size=20",
									"host": [
										"{{events-v1}}"
									],
									"path": [
										"notif",
										""
									],
									"query": [
										{
											"key": "from",
											"value": "0"
										},
										{
											"key": "to",
											"value": "20"
										},
										{
											"key": "page_size",
											"value": "20"
										}
									]
								},
								"description": "if you want to produce notif into the RMQ channel put `consumer_info: null` and fill the `producer_info`, to consume notifs just put `producer_info: null` and fill the `consumer_info`"
							},
							"response": []
						},
						{
							"name": "Get Notif By Id",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"producer_info\": {\n        \"info\":{\n            \"local_spawn\": true,\n            \"notif_data\": { \n                \"receiver_info\": { \"id\": 1 },\n                \"id\": \"unqie-id\",\n                \"action_data\": {\n                    \"pid\": 200\n                }, \n                \"actioner_info\": { \"id\": 2 }, \n                \"action_type\": \"ProductPurchased\", \n                \"fired_at\": 1714316645, \n                \"is_seen\": false\n            }, \n            \"exchange_name\": \"wildonionExchange\",\n            \"exchange_type\": \"fanout\", // amq.topic for pubsub\n            \"routing_key\": \"\" // routing pattern or key - will be ignored if type is fanout\n        }\n    },\n    // \"producer_info\": null,\n    // \"consumer_info\": null\n    \"consumer_info\": {\n        \"info\": {\n            \"queue\": \"RustReporterQ\",\n            \"exchange_name\": \"wildonionExchange\",\n            \"routing_key\": \"\",\n            \"tag\": \"cons_tag0\",\n            \"redis_cache_exp\": 300,\n            \"local_spawn\": true\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{events-v1}}/notif/?id=3",
									"host": [
										"{{events-v1}}"
									],
									"path": [
										"notif",
										""
									],
									"query": [
										{
											"key": "id",
											"value": "3"
										}
									]
								},
								"description": "if you want to produce notif into the RMQ channel put `consumer_info: null` and fill the `producer_info`, to consume notifs just put `producer_info: null` and fill the `consumer_info`"
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Health",
			"item": [
				{
					"name": "Mint Demo",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"is_minted\": false,\n    \"buyer_id\": 1,\n    \"meta\": null\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{health-v1}}/?pid=1",
							"host": [
								"{{health-v1}}"
							],
							"path": [
								""
							],
							"query": [
								{
									"key": "pid",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Check",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"pid\": 1,\n    \"is_minted\": false,\n    \"buyer_id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{health-v1}}",
							"host": [
								"{{health-v1}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Auth",
			"item": [
				{
					"name": "Generate Access Token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{secret_key}}"
							}
						],
						"url": {
							"raw": "{{auth-v1}}?exp=4000&scope=write",
							"host": [
								"{{auth-v1}}"
							],
							"query": [
								{
									"key": "exp",
									"value": "4000"
								},
								{
									"key": "scope",
									"value": "write"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "events-v1",
			"value": "http://localhost:2344/v1/events/",
			"type": "string"
		},
		{
			"key": "auth-v1",
			"value": "http://localhost:2344/v1/auth/",
			"type": "string"
		},
		{
			"key": "health-v1",
			"value": "http://localhost:2344/v1/health/",
			"type": "string"
		},
		{
			"key": "secret_key",
			"value": "insecure-krm2s^^bo1n*-nvy",
			"type": "string"
		}
	]
}